<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on Pythonic🐶</title>
    <link>http://danigong.github.io/tags/git/</link>
    <description>Recent content in Git on Pythonic🐶</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 07 Mar 2018 17:09:40 +0800</lastBuildDate>
    <atom:link href="http://danigong.github.io/tags/git/feed/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>How to create a github.io repo</title>
      <link>http://danigong.github.io/post/how_to_create_a_github_io_repo/</link>
      <pubDate>Wed, 07 Mar 2018 17:09:40 +0800</pubDate>
      
      <guid>http://danigong.github.io/post/how_to_create_a_github_io_repo/</guid>
      <description>&lt;p&gt;&lt;strong&gt;开通自己的github.io repo&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;github.io是完全基于github创建的，其本质上是在你的github账户下创建一个特殊的repo。你可以参照如下步骤完成：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;创建repo&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;当然，一切的前提是你得首先有个github的账户，这里还请自行解决。登陆你的账户后，你可以创建一个新的repo。请务必注意该repo的名字，必须保持格式&lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;，其中&lt;code&gt;&amp;lt;username&amp;gt;&lt;/code&gt;替换成你的github账户名，这里假定创建的repo为 &amp;gt; &lt;code&gt;danielgong.github.io&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;把你创建的repo clone到本地就可以了&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git clone https://github.com/tobiasalin/tobiasalin.github.io&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to update hugo blog</title>
      <link>http://danigong.github.io/post/how_to_update_hugo_blog/</link>
      <pubDate>Wed, 07 Mar 2018 16:45:07 +0800</pubDate>
      
      <guid>http://danigong.github.io/post/how_to_update_hugo_blog/</guid>
      <description>&lt;p&gt;Quick Start&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1. Open iTerm2&lt;/li&gt;
&lt;li&gt;2. &lt;code&gt;control+command+h&lt;/code&gt; to open the tab with hugo profile&lt;/li&gt;
&lt;li&gt;3. &lt;code&gt;addblog&lt;/code&gt; to create a new blog post, hugo command will create a new post tesmplate and subl command will help open it.&lt;/li&gt;
&lt;li&gt;4. Note: Blog Title should not contain space and strip out &lt;code&gt;menu = &amp;quot;main&amp;quot;&lt;/code&gt; in the template.&lt;/li&gt;
&lt;li&gt;5. &lt;code&gt;deployblog&lt;/code&gt; to deploy newest update to github.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Detail&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;create blog shell script:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;echo &amp;quot;Blog Title: &amp;quot;
read Title
cd /Users/DanielGong/HugoSite/testsite
hugo new post/$Title.md
subl /Users/DanielGong/HugoSite/testsite/content/post/$Title.md
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;deploy blog shell script:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;echo &amp;quot;-------Begin-------&amp;quot;

cd /Users/DanielGong/HugoSite/testsite
hugo --theme=gs-hyde --baseUrl=&amp;quot;http://danigong.github.io/&amp;quot;
cd public
git add -A
git commit -m &amp;quot;auto_commit&amp;quot;
git push origin master

echo &amp;quot;-------Done-------&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;customize command:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Add &lt;code&gt;alias addblog=&amp;quot;xxx.sh&amp;quot;&lt;/code&gt; into &lt;code&gt;.bashrc&lt;/code&gt; file. Then &lt;code&gt;source ~/.bashrc&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Deploy Hugo Site on GitHub Pages</title>
      <link>http://danigong.github.io/post/deploy_hugo_site_to_github/</link>
      <pubDate>Sat, 28 May 2016 20:27:28 +0800</pubDate>
      
      <guid>http://danigong.github.io/post/deploy_hugo_site_to_github/</guid>
      <description>&lt;hr /&gt;

&lt;ol&gt;
&lt;li&gt;Create a Repository: danigong.github.io (replace danigong with your own github username)&lt;/li&gt;
&lt;li&gt;Change directory to root directory of the site.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ hugo --theme=hyde --baseUrl=&amp;quot;http://danigong.github.io/&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;$ cd public
$ git init
$ git remote add origin https://github.com/danigong/danigong.github.io.git
$ git add -A
$ git commit -m &amp;quot;first commit&amp;quot;
$ git push -u origin master
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Github Push Stucking When Writing Objects</title>
      <link>http://danigong.github.io/post/github_push_stuck/</link>
      <pubDate>Sat, 11 Apr 2015 21:35:05 +0800</pubDate>
      
      <guid>http://danigong.github.io/post/github_push_stuck/</guid>
      <description>&lt;p&gt;To solve the github push stucking problem:&lt;/p&gt;

&lt;p&gt;Try to use the command as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git config --global http.postBuffer 524288000
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>